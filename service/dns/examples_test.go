// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package dns_test

import (
	"bytes"
	"fmt"
	"time"

	"github.com/tily/sdk-go/aws"
	"github.com/tily/sdk-go/aws/session"
	"github.com/tily/sdk-go/service/dns"
)

var _ time.Duration
var _ bytes.Buffer

func Exampledns_ChangeResourceRecordSets() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	var params *dns.ChangeResourceRecordSetsInput
	resp, err := svc.ChangeResourceRecordSets(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_CreateHostedZone() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	var params *dns.CreateHostedZoneInput
	resp, err := svc.CreateHostedZone(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_DeleteHostedZone() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	var params *dns.DeleteHostedZoneInput
	resp, err := svc.DeleteHostedZone(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_GetChange() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	var params *dns.GetChangeInput
	resp, err := svc.GetChange(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_GetHostedZone() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	var params *dns.GetHostedZoneInput
	resp, err := svc.GetHostedZone(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_ListHostedZones() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	params := &dns.ListHostedZonesInput{
		Marker:   aws.String("String"),
		Maxitems: aws.Int64(1),
	}
	resp, err := svc.ListHostedZones(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Exampledns_ListResourceRecordSets() {
	sess := session.Must(session.NewSession())

	svc := dns.New(sess)

	params := &dns.ListResourceRecordSetsInput{
		Identifier: aws.String("String"),
		Maxitems:   aws.Int64(1),
		Name:       aws.String("String"),
		Type:       aws.String("String"),
	}
	resp, err := svc.ListResourceRecordSets(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}
