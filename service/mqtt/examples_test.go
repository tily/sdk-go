// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package mqtt_test

import (
	"bytes"
	"fmt"
	"time"

	"github.com/tily/sdk-go/aws"
	"github.com/tily/sdk-go/aws/session"
	"github.com/tily/sdk-go/service/mqtt"
)

var _ time.Duration
var _ bytes.Buffer

func Examplemqtt_CreateMQTTInstance() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.CreateMQTTInstanceInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
		Password:               aws.String("String"), // Required
		Username:               aws.String("String"), // Required
		Description:            aws.String("String"),
		MQTTInstanceClass:      aws.String("String"),
	}
	resp, err := svc.CreateMQTTInstance(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_CreateMQTTUser() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.CreateMQTTUserInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
		Password:               aws.String("String"), // Required
		Username:               aws.String("String"), // Required
		Description:            aws.String("String"),
	}
	resp, err := svc.CreateMQTTUser(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_DeleteMQTTInstance() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.DeleteMQTTInstanceInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
	}
	resp, err := svc.DeleteMQTTInstance(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_DeleteMQTTUser() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.DeleteMQTTUserInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
		Username:               aws.String("String"), // Required
	}
	resp, err := svc.DeleteMQTTUser(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_DescribeMQTTInstances() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.DescribeMQTTInstancesInput{
		MQTTInstanceIdentifier: aws.String("String"),
	}
	resp, err := svc.DescribeMQTTInstances(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_DescribeMQTTUsers() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.DescribeMQTTUsersInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
		Username:               aws.String("String"),
	}
	resp, err := svc.DescribeMQTTUsers(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_ModifyMQTTInstance() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.ModifyMQTTInstanceInput{
		Description:            aws.String("String"),
		MQTTInstanceClass:      aws.String("String"),
		MQTTInstanceIdentifier: aws.String("String"),
	}
	resp, err := svc.ModifyMQTTInstance(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_ModifyMQTTUser() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.ModifyMQTTUserInput{
		MQTTInstanceIdentifier: aws.String("String"), // Required
		Username:               aws.String("String"), // Required
		Description:            aws.String("String"),
		Password:               aws.String("String"),
	}
	resp, err := svc.ModifyMQTTUser(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func Examplemqtt_PublishMQTTMessage() {
	sess := session.Must(session.NewSession())

	svc := mqtt.New(sess)

	params := &mqtt.PublishMQTTMessageInput{
		MQTTInstanceIdentifier: aws.String("String"),
		Message:                aws.String("String"),
		Password:               aws.String("String"),
		Qos:                    aws.Int64(1),
		Retain:                 aws.Int64(1),
		Topic:                  aws.String("String"),
	}
	resp, err := svc.PublishMQTTMessage(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}
