// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package emailiface provides an interface to enable mocking the ess service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package emailiface

import (
	"github.com/tily/sdk-go/aws/request"
	"github.com/tily/sdk-go/service/email"
)

// emailAPI provides an interface to enable mocking the
// email.email service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // ess.
//    func myFunc(svc emailiface.emailAPI) bool {
//        // Make svc.DeleteIdentity request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := email.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockemailClient struct {
//        emailiface.emailAPI
//    }
//    func (m *mockemailClient) DeleteIdentity(input *email.DeleteIdentityInput) (*email.DeleteIdentityOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockemailClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type emailAPI interface {
	DeleteIdentityRequest(*email.DeleteIdentityInput) (*request.Request, *email.DeleteIdentityOutput)

	DeleteIdentity(*email.DeleteIdentityInput) (*email.DeleteIdentityOutput, error)

	GetIdentityDkimAttributesRequest(*email.GetIdentityDkimAttributesInput) (*request.Request, *email.GetIdentityDkimAttributesOutput)

	GetIdentityDkimAttributes(*email.GetIdentityDkimAttributesInput) (*email.GetIdentityDkimAttributesOutput, error)

	GetIdentityVerificationAttributesRequest(*email.GetIdentityVerificationAttributesInput) (*request.Request, *email.GetIdentityVerificationAttributesOutput)

	GetIdentityVerificationAttributes(*email.GetIdentityVerificationAttributesInput) (*email.GetIdentityVerificationAttributesOutput, error)

	GetSendQuotaRequest(*email.GetSendQuotaInput) (*request.Request, *email.GetSendQuotaOutput)

	GetSendQuota(*email.GetSendQuotaInput) (*email.GetSendQuotaOutput, error)

	GetSendStatisticsRequest(*email.GetSendStatisticsInput) (*request.Request, *email.GetSendStatisticsOutput)

	GetSendStatistics(*email.GetSendStatisticsInput) (*email.GetSendStatisticsOutput, error)

	ListIdentitiesRequest(*email.ListIdentitiesInput) (*request.Request, *email.ListIdentitiesOutput)

	ListIdentities(*email.ListIdentitiesInput) (*email.ListIdentitiesOutput, error)

	SendEmailRequest(*email.SendEmailInput) (*request.Request, *email.SendEmailOutput)

	SendEmail(*email.SendEmailInput) (*email.SendEmailOutput, error)

	SendRawEmailRequest(*email.SendRawEmailInput) (*request.Request, *email.SendRawEmailOutput)

	SendRawEmail(*email.SendRawEmailInput) (*email.SendRawEmailOutput, error)

	SetIdentityDkimEnabledRequest(*email.SetIdentityDkimEnabledInput) (*request.Request, *email.SetIdentityDkimEnabledOutput)

	SetIdentityDkimEnabled(*email.SetIdentityDkimEnabledInput) (*email.SetIdentityDkimEnabledOutput, error)

	VerifyDomainDkimRequest(*email.VerifyDomainDkimInput) (*request.Request, *email.VerifyDomainDkimOutput)

	VerifyDomainDkim(*email.VerifyDomainDkimInput) (*email.VerifyDomainDkimOutput, error)

	VerifyDomainIdentityRequest(*email.VerifyDomainIdentityInput) (*request.Request, *email.VerifyDomainIdentityOutput)

	VerifyDomainIdentity(*email.VerifyDomainIdentityInput) (*email.VerifyDomainIdentityOutput, error)

	VerifyEmailIdentityRequest(*email.VerifyEmailIdentityInput) (*request.Request, *email.VerifyEmailIdentityOutput)

	VerifyEmailIdentity(*email.VerifyEmailIdentityInput) (*email.VerifyEmailIdentityOutput, error)
}

var _ emailAPI = (*email.email)(nil)
