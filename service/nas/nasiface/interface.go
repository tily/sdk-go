// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package nasiface provides an interface to enable mocking the nas service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package nasiface

import (
	"github.com/tily/sdk-go/aws/request"
	"github.com/tily/sdk-go/service/nas"
)

// nasAPI provides an interface to enable mocking the
// nas.nas service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // nas.
//    func myFunc(svc nasiface.nasAPI) bool {
//        // Make svc.AuthorizeNASSecurityGroupIngress request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := nas.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mocknasClient struct {
//        nasiface.nasAPI
//    }
//    func (m *mocknasClient) AuthorizeNASSecurityGroupIngress(input *nas.AuthorizeNASSecurityGroupIngressInput) (*nas.AuthorizeNASSecurityGroupIngressOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mocknasClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type nasAPI interface {
	AuthorizeNASSecurityGroupIngressRequest(*nas.AuthorizeNASSecurityGroupIngressInput) (*request.Request, *nas.AuthorizeNASSecurityGroupIngressOutput)

	AuthorizeNASSecurityGroupIngress(*nas.AuthorizeNASSecurityGroupIngressInput) (*nas.AuthorizeNASSecurityGroupIngressOutput, error)

	CreateNASInstanceRequest(*nas.CreateNASInstanceInput) (*request.Request, *nas.CreateNASInstanceOutput)

	CreateNASInstance(*nas.CreateNASInstanceInput) (*nas.CreateNASInstanceOutput, error)

	CreateNASSecurityGroupRequest(*nas.CreateNASSecurityGroupInput) (*request.Request, *nas.CreateNASSecurityGroupOutput)

	CreateNASSecurityGroup(*nas.CreateNASSecurityGroupInput) (*nas.CreateNASSecurityGroupOutput, error)

	DeleteNASInstanceRequest(*nas.DeleteNASInstanceInput) (*request.Request, *nas.DeleteNASInstanceOutput)

	DeleteNASInstance(*nas.DeleteNASInstanceInput) (*nas.DeleteNASInstanceOutput, error)

	DeleteNASSecurityGroupRequest(*nas.DeleteNASSecurityGroupInput) (*request.Request, *nas.DeleteNASSecurityGroupOutput)

	DeleteNASSecurityGroup(*nas.DeleteNASSecurityGroupInput) (*nas.DeleteNASSecurityGroupOutput, error)

	DescribeNASInstancesRequest(*nas.DescribeNASInstancesInput) (*request.Request, *nas.DescribeNASInstancesOutput)

	DescribeNASInstances(*nas.DescribeNASInstancesInput) (*nas.DescribeNASInstancesOutput, error)

	DescribeNASSecurityGroupsRequest(*nas.DescribeNASSecurityGroupsInput) (*request.Request, *nas.DescribeNASSecurityGroupsOutput)

	DescribeNASSecurityGroups(*nas.DescribeNASSecurityGroupsInput) (*nas.DescribeNASSecurityGroupsOutput, error)

	GetMetricStatisticsRequest(*nas.GetMetricStatisticsInput) (*request.Request, *nas.GetMetricStatisticsOutput)

	GetMetricStatistics(*nas.GetMetricStatisticsInput) (*nas.GetMetricStatisticsOutput, error)

	ModifyNASInstanceRequest(*nas.ModifyNASInstanceInput) (*request.Request, *nas.ModifyNASInstanceOutput)

	ModifyNASInstance(*nas.ModifyNASInstanceInput) (*nas.ModifyNASInstanceOutput, error)

	ModifyNASSecurityGroupRequest(*nas.ModifyNASSecurityGroupInput) (*request.Request, *nas.ModifyNASSecurityGroupOutput)

	ModifyNASSecurityGroup(*nas.ModifyNASSecurityGroupInput) (*nas.ModifyNASSecurityGroupOutput, error)

	RevokeNASSecurityGroupIngressRequest(*nas.RevokeNASSecurityGroupIngressInput) (*request.Request, *nas.RevokeNASSecurityGroupIngressOutput)

	RevokeNASSecurityGroupIngress(*nas.RevokeNASSecurityGroupIngressInput) (*nas.RevokeNASSecurityGroupIngressOutput, error)
}

var _ nasAPI = (*nas.nas)(nil)
