// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package nas provides a client for nas.
package nas

import (
	"time"

	"github.com/tily/sdk-go/aws/awsutil"
	"github.com/tily/sdk-go/aws/request"
	"github.com/tily/sdk-go/private/protocol"
	"github.com/tily/sdk-go/private/protocol/query"
)

const opAuthorizeNASSecurityGroupIngress = "AuthorizeNASSecurityGroupIngress"

// AuthorizeNASSecurityGroupIngressRequest generates a "aws/request.Request" representing the
// client's request for the AuthorizeNASSecurityGroupIngress operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See AuthorizeNASSecurityGroupIngress for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the AuthorizeNASSecurityGroupIngress method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the AuthorizeNASSecurityGroupIngressRequest method.
//    req, resp := client.AuthorizeNASSecurityGroupIngressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//AuthorizeNASSecurityGroupIngress
func (c *nas) AuthorizeNASSecurityGroupIngressRequest(input *AuthorizeNASSecurityGroupIngressInput) (req *request.Request, output *AuthorizeNASSecurityGroupIngressOutput) {
	op := &request.Operation{
		Name:       opAuthorizeNASSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AuthorizeNASSecurityGroupIngressInput{}
	}

	output = &AuthorizeNASSecurityGroupIngressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AuthorizeNASSecurityGroupIngress API operation for nas.
//
// AuthorizeNASSecurityGroupIngress
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation AuthorizeNASSecurityGroupIngress for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//AuthorizeNASSecurityGroupIngress
func (c *nas) AuthorizeNASSecurityGroupIngress(input *AuthorizeNASSecurityGroupIngressInput) (*AuthorizeNASSecurityGroupIngressOutput, error) {
	req, out := c.AuthorizeNASSecurityGroupIngressRequest(input)
	err := req.Send()
	return out, err
}

const opCreateNASInstance = "CreateNASInstance"

// CreateNASInstanceRequest generates a "aws/request.Request" representing the
// client's request for the CreateNASInstance operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See CreateNASInstance for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the CreateNASInstance method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the CreateNASInstanceRequest method.
//    req, resp := client.CreateNASInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASInstance
func (c *nas) CreateNASInstanceRequest(input *CreateNASInstanceInput) (req *request.Request, output *CreateNASInstanceOutput) {
	op := &request.Operation{
		Name:       opCreateNASInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateNASInstanceInput{}
	}

	output = &CreateNASInstanceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateNASInstance API operation for nas.
//
// CreateNASInstance
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation CreateNASInstance for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASInstance
func (c *nas) CreateNASInstance(input *CreateNASInstanceInput) (*CreateNASInstanceOutput, error) {
	req, out := c.CreateNASInstanceRequest(input)
	err := req.Send()
	return out, err
}

const opCreateNASSecurityGroup = "CreateNASSecurityGroup"

// CreateNASSecurityGroupRequest generates a "aws/request.Request" representing the
// client's request for the CreateNASSecurityGroup operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See CreateNASSecurityGroup for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the CreateNASSecurityGroup method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the CreateNASSecurityGroupRequest method.
//    req, resp := client.CreateNASSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASSecurityGroup
func (c *nas) CreateNASSecurityGroupRequest(input *CreateNASSecurityGroupInput) (req *request.Request, output *CreateNASSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opCreateNASSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateNASSecurityGroupInput{}
	}

	output = &CreateNASSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateNASSecurityGroup API operation for nas.
//
// CreateNASSecurityGroup
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation CreateNASSecurityGroup for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASSecurityGroup
func (c *nas) CreateNASSecurityGroup(input *CreateNASSecurityGroupInput) (*CreateNASSecurityGroupOutput, error) {
	req, out := c.CreateNASSecurityGroupRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteNASInstance = "DeleteNASInstance"

// DeleteNASInstanceRequest generates a "aws/request.Request" representing the
// client's request for the DeleteNASInstance operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See DeleteNASInstance for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the DeleteNASInstance method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the DeleteNASInstanceRequest method.
//    req, resp := client.DeleteNASInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASInstance
func (c *nas) DeleteNASInstanceRequest(input *DeleteNASInstanceInput) (req *request.Request, output *DeleteNASInstanceOutput) {
	op := &request.Operation{
		Name:       opDeleteNASInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNASInstanceInput{}
	}

	output = &DeleteNASInstanceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteNASInstance API operation for nas.
//
// DeleteNASInstance
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation DeleteNASInstance for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASInstance
func (c *nas) DeleteNASInstance(input *DeleteNASInstanceInput) (*DeleteNASInstanceOutput, error) {
	req, out := c.DeleteNASInstanceRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteNASSecurityGroup = "DeleteNASSecurityGroup"

// DeleteNASSecurityGroupRequest generates a "aws/request.Request" representing the
// client's request for the DeleteNASSecurityGroup operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See DeleteNASSecurityGroup for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the DeleteNASSecurityGroup method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the DeleteNASSecurityGroupRequest method.
//    req, resp := client.DeleteNASSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASSecurityGroup
func (c *nas) DeleteNASSecurityGroupRequest(input *DeleteNASSecurityGroupInput) (req *request.Request, output *DeleteNASSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opDeleteNASSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNASSecurityGroupInput{}
	}

	output = &DeleteNASSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteNASSecurityGroup API operation for nas.
//
// DeleteNASSecurityGroup
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation DeleteNASSecurityGroup for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASSecurityGroup
func (c *nas) DeleteNASSecurityGroup(input *DeleteNASSecurityGroupInput) (*DeleteNASSecurityGroupOutput, error) {
	req, out := c.DeleteNASSecurityGroupRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeNASInstances = "DescribeNASInstances"

// DescribeNASInstancesRequest generates a "aws/request.Request" representing the
// client's request for the DescribeNASInstances operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See DescribeNASInstances for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the DescribeNASInstances method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the DescribeNASInstancesRequest method.
//    req, resp := client.DescribeNASInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASInstances
func (c *nas) DescribeNASInstancesRequest(input *DescribeNASInstancesInput) (req *request.Request, output *DescribeNASInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeNASInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNASInstancesInput{}
	}

	output = &DescribeNASInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeNASInstances API operation for nas.
//
// DescribeNASInstances
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation DescribeNASInstances for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASInstances
func (c *nas) DescribeNASInstances(input *DescribeNASInstancesInput) (*DescribeNASInstancesOutput, error) {
	req, out := c.DescribeNASInstancesRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeNASSecurityGroups = "DescribeNASSecurityGroups"

// DescribeNASSecurityGroupsRequest generates a "aws/request.Request" representing the
// client's request for the DescribeNASSecurityGroups operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See DescribeNASSecurityGroups for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the DescribeNASSecurityGroups method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the DescribeNASSecurityGroupsRequest method.
//    req, resp := client.DescribeNASSecurityGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASSecurityGroups
func (c *nas) DescribeNASSecurityGroupsRequest(input *DescribeNASSecurityGroupsInput) (req *request.Request, output *DescribeNASSecurityGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeNASSecurityGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNASSecurityGroupsInput{}
	}

	output = &DescribeNASSecurityGroupsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeNASSecurityGroups API operation for nas.
//
// DescribeNASSecurityGroups
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation DescribeNASSecurityGroups for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASSecurityGroups
func (c *nas) DescribeNASSecurityGroups(input *DescribeNASSecurityGroupsInput) (*DescribeNASSecurityGroupsOutput, error) {
	req, out := c.DescribeNASSecurityGroupsRequest(input)
	err := req.Send()
	return out, err
}

const opGetMetricStatistics = "GetMetricStatistics"

// GetMetricStatisticsRequest generates a "aws/request.Request" representing the
// client's request for the GetMetricStatistics operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See GetMetricStatistics for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the GetMetricStatistics method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the GetMetricStatisticsRequest method.
//    req, resp := client.GetMetricStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//GetMetricStatistics
func (c *nas) GetMetricStatisticsRequest(input *GetMetricStatisticsInput) (req *request.Request, output *GetMetricStatisticsOutput) {
	op := &request.Operation{
		Name:       opGetMetricStatistics,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetMetricStatisticsInput{}
	}

	output = &GetMetricStatisticsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetMetricStatistics API operation for nas.
//
// GetMetricStatistics
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation GetMetricStatistics for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//GetMetricStatistics
func (c *nas) GetMetricStatistics(input *GetMetricStatisticsInput) (*GetMetricStatisticsOutput, error) {
	req, out := c.GetMetricStatisticsRequest(input)
	err := req.Send()
	return out, err
}

const opModifyNASInstance = "ModifyNASInstance"

// ModifyNASInstanceRequest generates a "aws/request.Request" representing the
// client's request for the ModifyNASInstance operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See ModifyNASInstance for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the ModifyNASInstance method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the ModifyNASInstanceRequest method.
//    req, resp := client.ModifyNASInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASInstance
func (c *nas) ModifyNASInstanceRequest(input *ModifyNASInstanceInput) (req *request.Request, output *ModifyNASInstanceOutput) {
	op := &request.Operation{
		Name:       opModifyNASInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNASInstanceInput{}
	}

	output = &ModifyNASInstanceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyNASInstance API operation for nas.
//
// ModifyNASInstance
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation ModifyNASInstance for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASInstance
func (c *nas) ModifyNASInstance(input *ModifyNASInstanceInput) (*ModifyNASInstanceOutput, error) {
	req, out := c.ModifyNASInstanceRequest(input)
	err := req.Send()
	return out, err
}

const opModifyNASSecurityGroup = "ModifyNASSecurityGroup"

// ModifyNASSecurityGroupRequest generates a "aws/request.Request" representing the
// client's request for the ModifyNASSecurityGroup operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See ModifyNASSecurityGroup for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the ModifyNASSecurityGroup method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the ModifyNASSecurityGroupRequest method.
//    req, resp := client.ModifyNASSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASSecurityGroup
func (c *nas) ModifyNASSecurityGroupRequest(input *ModifyNASSecurityGroupInput) (req *request.Request, output *ModifyNASSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opModifyNASSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNASSecurityGroupInput{}
	}

	output = &ModifyNASSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyNASSecurityGroup API operation for nas.
//
// ModifyNASSecurityGroup
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation ModifyNASSecurityGroup for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASSecurityGroup
func (c *nas) ModifyNASSecurityGroup(input *ModifyNASSecurityGroupInput) (*ModifyNASSecurityGroupOutput, error) {
	req, out := c.ModifyNASSecurityGroupRequest(input)
	err := req.Send()
	return out, err
}

const opRevokeNASSecurityGroupIngress = "RevokeNASSecurityGroupIngress"

// RevokeNASSecurityGroupIngressRequest generates a "aws/request.Request" representing the
// client's request for the RevokeNASSecurityGroupIngress operation. The "output" return
// value can be used to capture response data after the request's "Send" method
// is called.
//
// See RevokeNASSecurityGroupIngress for usage and error information.
//
// Creating a request object using this method should be used when you want to inject
// custom logic into the request's lifecycle using a custom handler, or if you want to
// access properties on the request object before or after sending the request. If
// you just want the service response, call the RevokeNASSecurityGroupIngress method directly
// instead.
//
// Note: You must call the "Send" method on the returned request object in order
// to execute the request.
//
//    // Example sending a request using the RevokeNASSecurityGroupIngressRequest method.
//    req, resp := client.RevokeNASSecurityGroupIngressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI//RevokeNASSecurityGroupIngress
func (c *nas) RevokeNASSecurityGroupIngressRequest(input *RevokeNASSecurityGroupIngressInput) (req *request.Request, output *RevokeNASSecurityGroupIngressOutput) {
	op := &request.Operation{
		Name:       opRevokeNASSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RevokeNASSecurityGroupIngressInput{}
	}

	output = &RevokeNASSecurityGroupIngressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RevokeNASSecurityGroupIngress API operation for nas.
//
// RevokeNASSecurityGroupIngress
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for nas's
// API operation RevokeNASSecurityGroupIngress for usage and error information.
// Please also see https://docs.aws.amazon.com/goto/WebAPI//RevokeNASSecurityGroupIngress
func (c *nas) RevokeNASSecurityGroupIngress(input *RevokeNASSecurityGroupIngressInput) (*RevokeNASSecurityGroupIngressOutput, error) {
	req, out := c.RevokeNASSecurityGroupIngressRequest(input)
	err := req.Send()
	return out, err
}

// AuthorizeNASSecurityGroupIngressRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//AuthorizeNASSecurityGroupIngressRequest
type AuthorizeNASSecurityGroupIngressInput struct {
	_ struct{} `type:"structure"`

	// String
	CIDRIP *string `type:"string"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`

	// String
	SecurityGroupName *string `type:"string"`
}

// String returns the string representation
func (s AuthorizeNASSecurityGroupIngressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthorizeNASSecurityGroupIngressInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AuthorizeNASSecurityGroupIngressInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AuthorizeNASSecurityGroupIngressInput"}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCIDRIP sets the CIDRIP field's value.
func (s *AuthorizeNASSecurityGroupIngressInput) SetCIDRIP(v string) *AuthorizeNASSecurityGroupIngressInput {
	s.CIDRIP = &v
	return s
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *AuthorizeNASSecurityGroupIngressInput) SetNASSecurityGroupName(v string) *AuthorizeNASSecurityGroupIngressInput {
	s.NASSecurityGroupName = &v
	return s
}

// SetSecurityGroupName sets the SecurityGroupName field's value.
func (s *AuthorizeNASSecurityGroupIngressInput) SetSecurityGroupName(v string) *AuthorizeNASSecurityGroupIngressInput {
	s.SecurityGroupName = &v
	return s
}

// AuthorizeNASSecurityGroupIngressResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//AuthorizeNASSecurityGroupIngressResult
type AuthorizeNASSecurityGroupIngressOutput struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroup
	NASSecurityGroup *NASSecurityGroup `type:"structure"`
}

// String returns the string representation
func (s AuthorizeNASSecurityGroupIngressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthorizeNASSecurityGroupIngressOutput) GoString() string {
	return s.String()
}

// SetNASSecurityGroup sets the NASSecurityGroup field's value.
func (s *AuthorizeNASSecurityGroupIngressOutput) SetNASSecurityGroup(v *NASSecurityGroup) *AuthorizeNASSecurityGroupIngressOutput {
	s.NASSecurityGroup = v
	return s
}

// CreateNASInstanceRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASInstanceRequest
type CreateNASInstanceInput struct {
	_ struct{} `type:"structure"`

	// Integer
	//
	// AllocatedStorage is a required field
	AllocatedStorage *int64 `type:"integer" required:"true"`

	// String
	AvailabilityZone *string `type:"string"`

	// String
	MasterPrivateAddress *string `type:"string"`

	// String
	MasterUserPassword *string `type:"string"`

	// String
	MasterUsername *string `type:"string"`

	// String
	NASInstanceDescription *string `type:"string"`

	// String
	//
	// NASInstanceIdentifier is a required field
	NASInstanceIdentifier *string `type:"string" required:"true"`

	// Integer
	NASInstanceType *int64 `type:"integer"`

	// NASSecurityGroupsStringList
	NASSecurityGroups []*string `type:"list"`

	// String
	NetworkId *string `type:"string"`

	// String
	//
	// Protocol is a required field
	Protocol *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateNASInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNASInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateNASInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateNASInstanceInput"}
	if s.AllocatedStorage == nil {
		invalidParams.Add(request.NewErrParamRequired("AllocatedStorage"))
	}
	if s.NASInstanceIdentifier == nil {
		invalidParams.Add(request.NewErrParamRequired("NASInstanceIdentifier"))
	}
	if s.Protocol == nil {
		invalidParams.Add(request.NewErrParamRequired("Protocol"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllocatedStorage sets the AllocatedStorage field's value.
func (s *CreateNASInstanceInput) SetAllocatedStorage(v int64) *CreateNASInstanceInput {
	s.AllocatedStorage = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *CreateNASInstanceInput) SetAvailabilityZone(v string) *CreateNASInstanceInput {
	s.AvailabilityZone = &v
	return s
}

// SetMasterPrivateAddress sets the MasterPrivateAddress field's value.
func (s *CreateNASInstanceInput) SetMasterPrivateAddress(v string) *CreateNASInstanceInput {
	s.MasterPrivateAddress = &v
	return s
}

// SetMasterUserPassword sets the MasterUserPassword field's value.
func (s *CreateNASInstanceInput) SetMasterUserPassword(v string) *CreateNASInstanceInput {
	s.MasterUserPassword = &v
	return s
}

// SetMasterUsername sets the MasterUsername field's value.
func (s *CreateNASInstanceInput) SetMasterUsername(v string) *CreateNASInstanceInput {
	s.MasterUsername = &v
	return s
}

// SetNASInstanceDescription sets the NASInstanceDescription field's value.
func (s *CreateNASInstanceInput) SetNASInstanceDescription(v string) *CreateNASInstanceInput {
	s.NASInstanceDescription = &v
	return s
}

// SetNASInstanceIdentifier sets the NASInstanceIdentifier field's value.
func (s *CreateNASInstanceInput) SetNASInstanceIdentifier(v string) *CreateNASInstanceInput {
	s.NASInstanceIdentifier = &v
	return s
}

// SetNASInstanceType sets the NASInstanceType field's value.
func (s *CreateNASInstanceInput) SetNASInstanceType(v int64) *CreateNASInstanceInput {
	s.NASInstanceType = &v
	return s
}

// SetNASSecurityGroups sets the NASSecurityGroups field's value.
func (s *CreateNASInstanceInput) SetNASSecurityGroups(v []*string) *CreateNASInstanceInput {
	s.NASSecurityGroups = v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *CreateNASInstanceInput) SetNetworkId(v string) *CreateNASInstanceInput {
	s.NetworkId = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CreateNASInstanceInput) SetProtocol(v string) *CreateNASInstanceInput {
	s.Protocol = &v
	return s
}

// CreateNASInstanceResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASInstanceResult
type CreateNASInstanceOutput struct {
	_ struct{} `type:"structure"`

	// NASInstance
	NASInstance *NASInstance `type:"structure"`
}

// String returns the string representation
func (s CreateNASInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNASInstanceOutput) GoString() string {
	return s.String()
}

// SetNASInstance sets the NASInstance field's value.
func (s *CreateNASInstanceOutput) SetNASInstance(v *NASInstance) *CreateNASInstanceOutput {
	s.NASInstance = v
	return s
}

// CreateNASSecurityGroupRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASSecurityGroupRequest
type CreateNASSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	// String
	//
	// AvailabilityZone is a required field
	AvailabilityZone *string `type:"string" required:"true"`

	// String
	NASSecurityGroupDescription *string `type:"string"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateNASSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNASSecurityGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateNASSecurityGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateNASSecurityGroupInput"}
	if s.AvailabilityZone == nil {
		invalidParams.Add(request.NewErrParamRequired("AvailabilityZone"))
	}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *CreateNASSecurityGroupInput) SetAvailabilityZone(v string) *CreateNASSecurityGroupInput {
	s.AvailabilityZone = &v
	return s
}

// SetNASSecurityGroupDescription sets the NASSecurityGroupDescription field's value.
func (s *CreateNASSecurityGroupInput) SetNASSecurityGroupDescription(v string) *CreateNASSecurityGroupInput {
	s.NASSecurityGroupDescription = &v
	return s
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *CreateNASSecurityGroupInput) SetNASSecurityGroupName(v string) *CreateNASSecurityGroupInput {
	s.NASSecurityGroupName = &v
	return s
}

// CreateNASSecurityGroupResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//CreateNASSecurityGroupResult
type CreateNASSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroup
	NASSecurityGroup *NASSecurityGroup `type:"structure"`
}

// String returns the string representation
func (s CreateNASSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNASSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetNASSecurityGroup sets the NASSecurityGroup field's value.
func (s *CreateNASSecurityGroupOutput) SetNASSecurityGroup(v *NASSecurityGroup) *CreateNASSecurityGroupOutput {
	s.NASSecurityGroup = v
	return s
}

// Datapoints
// Please also see https://docs.aws.amazon.com/goto/WebAPI//Datapoints
type Datapoints struct {
	_ struct{} `type:"structure"`

	// member
	Member *Member `locationName:"member" type:"structure"`
}

// String returns the string representation
func (s Datapoints) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Datapoints) GoString() string {
	return s.String()
}

// SetMember sets the Member field's value.
func (s *Datapoints) SetMember(v *Member) *Datapoints {
	s.Member = v
	return s
}

// DeleteNASInstanceRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASInstanceRequest
type DeleteNASInstanceInput struct {
	_ struct{} `type:"structure"`

	// String
	DirectoryServiceAdministratorName *string `type:"string"`

	// String
	DirectoryServiceAdministratorPassword *string `type:"string"`

	// String
	//
	// NASInstanceIdentifier is a required field
	NASInstanceIdentifier *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteNASInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNASInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNASInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteNASInstanceInput"}
	if s.NASInstanceIdentifier == nil {
		invalidParams.Add(request.NewErrParamRequired("NASInstanceIdentifier"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDirectoryServiceAdministratorName sets the DirectoryServiceAdministratorName field's value.
func (s *DeleteNASInstanceInput) SetDirectoryServiceAdministratorName(v string) *DeleteNASInstanceInput {
	s.DirectoryServiceAdministratorName = &v
	return s
}

// SetDirectoryServiceAdministratorPassword sets the DirectoryServiceAdministratorPassword field's value.
func (s *DeleteNASInstanceInput) SetDirectoryServiceAdministratorPassword(v string) *DeleteNASInstanceInput {
	s.DirectoryServiceAdministratorPassword = &v
	return s
}

// SetNASInstanceIdentifier sets the NASInstanceIdentifier field's value.
func (s *DeleteNASInstanceInput) SetNASInstanceIdentifier(v string) *DeleteNASInstanceInput {
	s.NASInstanceIdentifier = &v
	return s
}

// DeleteNASInstanceResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASInstanceResult
type DeleteNASInstanceOutput struct {
	_ struct{} `type:"structure"`

	// NASInstance
	NASInstance *NASInstance `type:"structure"`
}

// String returns the string representation
func (s DeleteNASInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNASInstanceOutput) GoString() string {
	return s.String()
}

// SetNASInstance sets the NASInstance field's value.
func (s *DeleteNASInstanceOutput) SetNASInstance(v *NASInstance) *DeleteNASInstanceOutput {
	s.NASInstance = v
	return s
}

// DeleteNASSecurityGroupRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASSecurityGroupRequest
type DeleteNASSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteNASSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNASSecurityGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNASSecurityGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteNASSecurityGroupInput"}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *DeleteNASSecurityGroupInput) SetNASSecurityGroupName(v string) *DeleteNASSecurityGroupInput {
	s.NASSecurityGroupName = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI//DeleteNASSecurityGroupOutput
type DeleteNASSecurityGroupOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteNASSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNASSecurityGroupOutput) GoString() string {
	return s.String()
}

// DescribeNASInstancesRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASInstancesRequest
type DescribeNASInstancesInput struct {
	_ struct{} `type:"structure"`

	// String
	NASInstanceIdentifier *string `type:"string"`
}

// String returns the string representation
func (s DescribeNASInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNASInstancesInput) GoString() string {
	return s.String()
}

// SetNASInstanceIdentifier sets the NASInstanceIdentifier field's value.
func (s *DescribeNASInstancesInput) SetNASInstanceIdentifier(v string) *DescribeNASInstancesInput {
	s.NASInstanceIdentifier = &v
	return s
}

// DescribeNASInstancesResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASInstancesResult
type DescribeNASInstancesOutput struct {
	_ struct{} `type:"structure"`

	// NASInstances
	NASInstances []*NASInstance `locationNameList:"NASInstance" type:"list"`
}

// String returns the string representation
func (s DescribeNASInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNASInstancesOutput) GoString() string {
	return s.String()
}

// SetNASInstances sets the NASInstances field's value.
func (s *DescribeNASInstancesOutput) SetNASInstances(v []*NASInstance) *DescribeNASInstancesOutput {
	s.NASInstances = v
	return s
}

// DescribeNASSecurityGroupsRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASSecurityGroupsRequest
type DescribeNASSecurityGroupsInput struct {
	_ struct{} `type:"structure"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeNASSecurityGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNASSecurityGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeNASSecurityGroupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeNASSecurityGroupsInput"}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *DescribeNASSecurityGroupsInput) SetNASSecurityGroupName(v string) *DescribeNASSecurityGroupsInput {
	s.NASSecurityGroupName = &v
	return s
}

// DescribeNASSecurityGroupsResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DescribeNASSecurityGroupsResult
type DescribeNASSecurityGroupsOutput struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroups
	NASSecurityGroups []*NASSecurityGroup `locationNameList:"NASSecurityGroup" type:"list"`
}

// String returns the string representation
func (s DescribeNASSecurityGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNASSecurityGroupsOutput) GoString() string {
	return s.String()
}

// SetNASSecurityGroups sets the NASSecurityGroups field's value.
func (s *DescribeNASSecurityGroupsOutput) SetNASSecurityGroups(v []*NASSecurityGroup) *DescribeNASSecurityGroupsOutput {
	s.NASSecurityGroups = v
	return s
}

// DimensionsStruct
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DimensionsStruct
type DimensionsStruct struct {
	_ struct{} `type:"structure"`

	// String
	Name *string `type:"string"`

	// String
	Value *string `type:"string"`
}

// String returns the string representation
func (s DimensionsStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DimensionsStruct) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *DimensionsStruct) SetName(v string) *DimensionsStruct {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DimensionsStruct) SetValue(v string) *DimensionsStruct {
	s.Value = &v
	return s
}

// DomainControllersStruct
// Please also see https://docs.aws.amazon.com/goto/WebAPI//DomainControllersStruct
type DomainControllersStruct struct {
	_ struct{} `type:"structure"`

	// String
	Hostname *string `type:"string"`

	// String
	IPAddress *string `type:"string"`
}

// String returns the string representation
func (s DomainControllersStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DomainControllersStruct) GoString() string {
	return s.String()
}

// SetHostname sets the Hostname field's value.
func (s *DomainControllersStruct) SetHostname(v string) *DomainControllersStruct {
	s.Hostname = &v
	return s
}

// SetIPAddress sets the IPAddress field's value.
func (s *DomainControllersStruct) SetIPAddress(v string) *DomainControllersStruct {
	s.IPAddress = &v
	return s
}

// Endpoint
// Please also see https://docs.aws.amazon.com/goto/WebAPI//Endpoint
type Endpoint struct {
	_ struct{} `type:"structure"`

	// Address
	Address *string `type:"string"`

	// PrivateAddress
	PrivateAddress *string `type:"string"`
}

// String returns the string representation
func (s Endpoint) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Endpoint) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *Endpoint) SetAddress(v string) *Endpoint {
	s.Address = &v
	return s
}

// SetPrivateAddress sets the PrivateAddress field's value.
func (s *Endpoint) SetPrivateAddress(v string) *Endpoint {
	s.PrivateAddress = &v
	return s
}

// GetMetricStatisticsRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//GetMetricStatisticsRequest
type GetMetricStatisticsInput struct {
	_ struct{} `type:"structure"`

	// DimensionsStructList
	//
	// Dimensions is a required field
	Dimensions []*DimensionsStruct `type:"list" required:"true"`

	// TStamp
	EndTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	// String
	//
	// MetricName is a required field
	MetricName *string `type:"string" required:"true"`

	// TStamp
	StartTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`
}

// String returns the string representation
func (s GetMetricStatisticsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMetricStatisticsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetMetricStatisticsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetMetricStatisticsInput"}
	if s.Dimensions == nil {
		invalidParams.Add(request.NewErrParamRequired("Dimensions"))
	}
	if s.MetricName == nil {
		invalidParams.Add(request.NewErrParamRequired("MetricName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDimensions sets the Dimensions field's value.
func (s *GetMetricStatisticsInput) SetDimensions(v []*DimensionsStruct) *GetMetricStatisticsInput {
	s.Dimensions = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *GetMetricStatisticsInput) SetEndTime(v time.Time) *GetMetricStatisticsInput {
	s.EndTime = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *GetMetricStatisticsInput) SetMetricName(v string) *GetMetricStatisticsInput {
	s.MetricName = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *GetMetricStatisticsInput) SetStartTime(v time.Time) *GetMetricStatisticsInput {
	s.StartTime = &v
	return s
}

// GetMetricStatisticsResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//GetMetricStatisticsResult
type GetMetricStatisticsOutput struct {
	_ struct{} `type:"structure"`

	// Datapoints
	Datapoints *Datapoints `type:"structure"`

	// Label
	Label *string `type:"string"`
}

// String returns the string representation
func (s GetMetricStatisticsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMetricStatisticsOutput) GoString() string {
	return s.String()
}

// SetDatapoints sets the Datapoints field's value.
func (s *GetMetricStatisticsOutput) SetDatapoints(v *Datapoints) *GetMetricStatisticsOutput {
	s.Datapoints = v
	return s
}

// SetLabel sets the Label field's value.
func (s *GetMetricStatisticsOutput) SetLabel(v string) *GetMetricStatisticsOutput {
	s.Label = &v
	return s
}

// IPRange
// Please also see https://docs.aws.amazon.com/goto/WebAPI//IPRange
type IPRange struct {
	_ struct{} `type:"structure"`

	// CIDRIP
	CIDRIP *string `type:"string"`

	// Status
	Status *string `type:"string"`
}

// String returns the string representation
func (s IPRange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IPRange) GoString() string {
	return s.String()
}

// SetCIDRIP sets the CIDRIP field's value.
func (s *IPRange) SetCIDRIP(v string) *IPRange {
	s.CIDRIP = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *IPRange) SetStatus(v string) *IPRange {
	s.Status = &v
	return s
}

// member
// Please also see https://docs.aws.amazon.com/goto/WebAPI//member
type Member struct {
	_ struct{} `type:"structure"`

	// SampleCount
	SampleCount *int64 `type:"integer"`

	// Sum
	Sum *int64 `type:"integer"`

	// TargetName
	TargetName *string `type:"string"`

	// Timestamp
	Timestamp *int64 `type:"integer"`
}

// String returns the string representation
func (s Member) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Member) GoString() string {
	return s.String()
}

// SetSampleCount sets the SampleCount field's value.
func (s *Member) SetSampleCount(v int64) *Member {
	s.SampleCount = &v
	return s
}

// SetSum sets the Sum field's value.
func (s *Member) SetSum(v int64) *Member {
	s.Sum = &v
	return s
}

// SetTargetName sets the TargetName field's value.
func (s *Member) SetTargetName(v string) *Member {
	s.TargetName = &v
	return s
}

// SetTimestamp sets the Timestamp field's value.
func (s *Member) SetTimestamp(v int64) *Member {
	s.Timestamp = &v
	return s
}

// ModifyNASInstanceRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASInstanceRequest
type ModifyNASInstanceInput struct {
	_ struct{} `type:"structure"`

	// Integer
	AllocatedStorage *int64 `type:"integer"`

	// Integer
	AuthenticationType *int64 `type:"integer"`

	// String
	DirectoryServiceAdministratorName *string `type:"string"`

	// String
	DirectoryServiceAdministratorPassword *string `type:"string"`

	// String
	DirectoryServiceDomainName *string `type:"string"`

	// DomainControllersStructList
	DomainControllers []*DomainControllersStruct `type:"list"`

	// String
	MasterPrivateAddress *string `type:"string"`

	// String
	MasterUserPassword *string `type:"string"`

	// String
	NASInstanceDescription *string `type:"string"`

	// String
	//
	// NASInstanceIdentifier is a required field
	NASInstanceIdentifier *string `type:"string" required:"true"`

	// NASSecurityGroupsStringList
	NASSecurityGroups []*string `type:"list"`

	// String
	//
	// NetworkId is a required field
	NetworkId *string `type:"string" required:"true"`

	// String
	NewNASInstanceIdentifier *string `type:"string"`
}

// String returns the string representation
func (s ModifyNASInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNASInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNASInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNASInstanceInput"}
	if s.NASInstanceIdentifier == nil {
		invalidParams.Add(request.NewErrParamRequired("NASInstanceIdentifier"))
	}
	if s.NetworkId == nil {
		invalidParams.Add(request.NewErrParamRequired("NetworkId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllocatedStorage sets the AllocatedStorage field's value.
func (s *ModifyNASInstanceInput) SetAllocatedStorage(v int64) *ModifyNASInstanceInput {
	s.AllocatedStorage = &v
	return s
}

// SetAuthenticationType sets the AuthenticationType field's value.
func (s *ModifyNASInstanceInput) SetAuthenticationType(v int64) *ModifyNASInstanceInput {
	s.AuthenticationType = &v
	return s
}

// SetDirectoryServiceAdministratorName sets the DirectoryServiceAdministratorName field's value.
func (s *ModifyNASInstanceInput) SetDirectoryServiceAdministratorName(v string) *ModifyNASInstanceInput {
	s.DirectoryServiceAdministratorName = &v
	return s
}

// SetDirectoryServiceAdministratorPassword sets the DirectoryServiceAdministratorPassword field's value.
func (s *ModifyNASInstanceInput) SetDirectoryServiceAdministratorPassword(v string) *ModifyNASInstanceInput {
	s.DirectoryServiceAdministratorPassword = &v
	return s
}

// SetDirectoryServiceDomainName sets the DirectoryServiceDomainName field's value.
func (s *ModifyNASInstanceInput) SetDirectoryServiceDomainName(v string) *ModifyNASInstanceInput {
	s.DirectoryServiceDomainName = &v
	return s
}

// SetDomainControllers sets the DomainControllers field's value.
func (s *ModifyNASInstanceInput) SetDomainControllers(v []*DomainControllersStruct) *ModifyNASInstanceInput {
	s.DomainControllers = v
	return s
}

// SetMasterPrivateAddress sets the MasterPrivateAddress field's value.
func (s *ModifyNASInstanceInput) SetMasterPrivateAddress(v string) *ModifyNASInstanceInput {
	s.MasterPrivateAddress = &v
	return s
}

// SetMasterUserPassword sets the MasterUserPassword field's value.
func (s *ModifyNASInstanceInput) SetMasterUserPassword(v string) *ModifyNASInstanceInput {
	s.MasterUserPassword = &v
	return s
}

// SetNASInstanceDescription sets the NASInstanceDescription field's value.
func (s *ModifyNASInstanceInput) SetNASInstanceDescription(v string) *ModifyNASInstanceInput {
	s.NASInstanceDescription = &v
	return s
}

// SetNASInstanceIdentifier sets the NASInstanceIdentifier field's value.
func (s *ModifyNASInstanceInput) SetNASInstanceIdentifier(v string) *ModifyNASInstanceInput {
	s.NASInstanceIdentifier = &v
	return s
}

// SetNASSecurityGroups sets the NASSecurityGroups field's value.
func (s *ModifyNASInstanceInput) SetNASSecurityGroups(v []*string) *ModifyNASInstanceInput {
	s.NASSecurityGroups = v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *ModifyNASInstanceInput) SetNetworkId(v string) *ModifyNASInstanceInput {
	s.NetworkId = &v
	return s
}

// SetNewNASInstanceIdentifier sets the NewNASInstanceIdentifier field's value.
func (s *ModifyNASInstanceInput) SetNewNASInstanceIdentifier(v string) *ModifyNASInstanceInput {
	s.NewNASInstanceIdentifier = &v
	return s
}

// ModifyNASInstanceResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASInstanceResult
type ModifyNASInstanceOutput struct {
	_ struct{} `type:"structure"`

	// NASInstance
	NASInstance *NASInstance `type:"structure"`
}

// String returns the string representation
func (s ModifyNASInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNASInstanceOutput) GoString() string {
	return s.String()
}

// SetNASInstance sets the NASInstance field's value.
func (s *ModifyNASInstanceOutput) SetNASInstance(v *NASInstance) *ModifyNASInstanceOutput {
	s.NASInstance = v
	return s
}

// ModifyNASSecurityGroupRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASSecurityGroupRequest
type ModifyNASSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	// String
	NASSecurityGroupDescription *string `type:"string"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`

	// String
	NewNASSecurityGroupName *string `type:"string"`
}

// String returns the string representation
func (s ModifyNASSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNASSecurityGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNASSecurityGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNASSecurityGroupInput"}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNASSecurityGroupDescription sets the NASSecurityGroupDescription field's value.
func (s *ModifyNASSecurityGroupInput) SetNASSecurityGroupDescription(v string) *ModifyNASSecurityGroupInput {
	s.NASSecurityGroupDescription = &v
	return s
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *ModifyNASSecurityGroupInput) SetNASSecurityGroupName(v string) *ModifyNASSecurityGroupInput {
	s.NASSecurityGroupName = &v
	return s
}

// SetNewNASSecurityGroupName sets the NewNASSecurityGroupName field's value.
func (s *ModifyNASSecurityGroupInput) SetNewNASSecurityGroupName(v string) *ModifyNASSecurityGroupInput {
	s.NewNASSecurityGroupName = &v
	return s
}

// ModifyNASSecurityGroupResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//ModifyNASSecurityGroupResult
type ModifyNASSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroup
	NASSecurityGroup *NASSecurityGroup `type:"structure"`
}

// String returns the string representation
func (s ModifyNASSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNASSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetNASSecurityGroup sets the NASSecurityGroup field's value.
func (s *ModifyNASSecurityGroupOutput) SetNASSecurityGroup(v *NASSecurityGroup) *ModifyNASSecurityGroupOutput {
	s.NASSecurityGroup = v
	return s
}

// NASInstance
// Please also see https://docs.aws.amazon.com/goto/WebAPI//NASInstance
type NASInstance struct {
	_ struct{} `type:"structure"`

	// AllocatedStorage
	AllocatedStorage *int64 `type:"integer"`

	// AvailabilityZone
	AvailabilityZone *string `type:"string"`

	// CreateTime
	CreateTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	// Endpoint
	Endpoint *Endpoint `type:"structure"`

	// NASInstanceIdentifier
	NASInstanceIdentifier *string `type:"string"`

	// NASInstanceStatus
	NASInstanceStatus *string `type:"string"`

	// NASSecurityGroups
	NASSecurityGroups []*NASSecurityGroup `locationNameList:"NASSecurityGroup" type:"list"`

	// Protocol
	Protocol *string `type:"string"`

	// StorageType
	StorageType *int64 `type:"integer"`
}

// String returns the string representation
func (s NASInstance) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NASInstance) GoString() string {
	return s.String()
}

// SetAllocatedStorage sets the AllocatedStorage field's value.
func (s *NASInstance) SetAllocatedStorage(v int64) *NASInstance {
	s.AllocatedStorage = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *NASInstance) SetAvailabilityZone(v string) *NASInstance {
	s.AvailabilityZone = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *NASInstance) SetCreateTime(v time.Time) *NASInstance {
	s.CreateTime = &v
	return s
}

// SetEndpoint sets the Endpoint field's value.
func (s *NASInstance) SetEndpoint(v *Endpoint) *NASInstance {
	s.Endpoint = v
	return s
}

// SetNASInstanceIdentifier sets the NASInstanceIdentifier field's value.
func (s *NASInstance) SetNASInstanceIdentifier(v string) *NASInstance {
	s.NASInstanceIdentifier = &v
	return s
}

// SetNASInstanceStatus sets the NASInstanceStatus field's value.
func (s *NASInstance) SetNASInstanceStatus(v string) *NASInstance {
	s.NASInstanceStatus = &v
	return s
}

// SetNASSecurityGroups sets the NASSecurityGroups field's value.
func (s *NASInstance) SetNASSecurityGroups(v []*NASSecurityGroup) *NASInstance {
	s.NASSecurityGroups = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NASInstance) SetProtocol(v string) *NASInstance {
	s.Protocol = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *NASInstance) SetStorageType(v int64) *NASInstance {
	s.StorageType = &v
	return s
}

// NASSecurityGroup
// Please also see https://docs.aws.amazon.com/goto/WebAPI//NASSecurityGroup
type NASSecurityGroup struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroupName
	NASSecurityGroupName *string `type:"string"`

	// SecurityGroups
	SecurityGroups [][]*IPRange `locationNameList:"IPRanges" type:"list"`
}

// String returns the string representation
func (s NASSecurityGroup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NASSecurityGroup) GoString() string {
	return s.String()
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *NASSecurityGroup) SetNASSecurityGroupName(v string) *NASSecurityGroup {
	s.NASSecurityGroupName = &v
	return s
}

// SetSecurityGroups sets the SecurityGroups field's value.
func (s *NASSecurityGroup) SetSecurityGroups(v [][]*IPRange) *NASSecurityGroup {
	s.SecurityGroups = v
	return s
}

// RevokeNASSecurityGroupIngressRequest
// Please also see https://docs.aws.amazon.com/goto/WebAPI//RevokeNASSecurityGroupIngressRequest
type RevokeNASSecurityGroupIngressInput struct {
	_ struct{} `type:"structure"`

	// String
	CIDRIP *string `type:"string"`

	// String
	//
	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `type:"string" required:"true"`

	// String
	SecurityGroupName *string `type:"string"`
}

// String returns the string representation
func (s RevokeNASSecurityGroupIngressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokeNASSecurityGroupIngressInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RevokeNASSecurityGroupIngressInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RevokeNASSecurityGroupIngressInput"}
	if s.NASSecurityGroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCIDRIP sets the CIDRIP field's value.
func (s *RevokeNASSecurityGroupIngressInput) SetCIDRIP(v string) *RevokeNASSecurityGroupIngressInput {
	s.CIDRIP = &v
	return s
}

// SetNASSecurityGroupName sets the NASSecurityGroupName field's value.
func (s *RevokeNASSecurityGroupIngressInput) SetNASSecurityGroupName(v string) *RevokeNASSecurityGroupIngressInput {
	s.NASSecurityGroupName = &v
	return s
}

// SetSecurityGroupName sets the SecurityGroupName field's value.
func (s *RevokeNASSecurityGroupIngressInput) SetSecurityGroupName(v string) *RevokeNASSecurityGroupIngressInput {
	s.SecurityGroupName = &v
	return s
}

// RevokeNASSecurityGroupIngressResult
// Please also see https://docs.aws.amazon.com/goto/WebAPI//RevokeNASSecurityGroupIngressResult
type RevokeNASSecurityGroupIngressOutput struct {
	_ struct{} `type:"structure"`

	// NASSecurityGroup
	NASSecurityGroup *NASSecurityGroup `type:"structure"`
}

// String returns the string representation
func (s RevokeNASSecurityGroupIngressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokeNASSecurityGroupIngressOutput) GoString() string {
	return s.String()
}

// SetNASSecurityGroup sets the NASSecurityGroup field's value.
func (s *RevokeNASSecurityGroupIngressOutput) SetNASSecurityGroup(v *NASSecurityGroup) *RevokeNASSecurityGroupIngressOutput {
	s.NASSecurityGroup = v
	return s
}
